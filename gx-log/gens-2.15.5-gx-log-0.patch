diff -rupN -xMakefile -xMakefile.in gens-2.15.5/src/gens/gens_core/genix/genix.c gens-2.15.5-gx-log/src/gens/gens_core/genix/genix.c
--- gens-2.15.5/src/gens/gens_core/genix/genix.c	1969-12-31 17:00:00.000000000 -0700
+++ gens-2.15.5-gx-log/src/gens/gens_core/genix/genix.c	2013-10-18 23:46:46.850185096 -0700
@@ -0,0 +1,133 @@
+#include <stdio.h>
+
+#include "../cpu/68k/star_68k.h"
+#include "../cpu/68k/cpu_68k.h"
+#include "../mem/mem_m68k.h"
+
+static unsigned char read_68k_byte(unsigned at)
+{
+	int v;
+	v = main68k_fetch(at & ~0x1);
+	if (at & 0x1)
+		return v & 0xff;
+	return (v >> 8) & 0xff;
+}
+
+/* potential stack overflow here, but it's not a big deal since we're not
+   running arbitrary code. just don't send strings to gx-log that are longer
+   than 2048 chars :D */
+static size_t read_cstr(char *buf, unsigned start)
+{
+	size_t n = 0;
+
+	for (;; n++, start++) {
+		buf[n] = read_68k_byte(start);
+		if (buf[n] == '\0')
+			break;
+	}
+
+	return n;
+}
+
+static unsigned read_long(unsigned at)
+{
+	return (read_68k_byte(at + 0) << 24) |
+	       (read_68k_byte(at + 1) << 16) |
+	       (read_68k_byte(at + 2) <<  8) |
+	       (read_68k_byte(at + 3) <<  0);
+}
+
+static void gx_log_format(unsigned data, unsigned faddr, unsigned daddr)
+{
+	char *f, fmtbuf[2048], databuf[2048];
+
+	read_cstr(fmtbuf, faddr);
+
+	for (f=fmtbuf; *f; f++) {
+		if (*f != '*') {
+			putchar(*f);
+			continue;
+		}
+		f++;
+
+		switch (*f) {
+		case 'd':
+			printf("%d", read_long(daddr));
+			daddr += 4;
+			break;
+		case 'x':
+			printf("%x", read_long(daddr));
+			daddr += 4;
+			break;
+		case 'p':
+			printf("0x%06X", read_long(daddr));
+			daddr += 4;
+			break;
+		case 's':
+			read_cstr(databuf, read_long(daddr));
+			daddr += 4;
+			printf("%s", databuf);
+			break;
+		}
+	}
+}
+
+static void gx_log_hexdump(unsigned data, unsigned start, unsigned end)
+{
+	unsigned fstart, fend, x;
+	unsigned char c;
+
+	if (start == end) {
+		/* hax */
+		printf("%6x:\n", start & ~0xf);
+		return;
+	}
+
+	fstart = start & ~0xf;
+	fend = ((end-1) & ~0xf) + 0x10;
+
+	for (x=fstart; x<fend; x++) {
+		if ((x & 0xf) == 0)
+			printf("%6x:", x);
+
+		if (start <= x && x < end) {
+			c = read_68k_byte(x);
+			printf(" %02x", c);
+		} else {
+			printf("   ");
+		}
+
+		if ((x & 0xf) == 0xf)
+			printf("\n");
+	}
+}
+
+static void gx_log_status(unsigned data)
+{
+	printf("gx_log_status not implemented yet!\n");
+}
+
+static void gx_log_config(unsigned data, unsigned paddr)
+{
+	printf("gx_log_config not implemented yet!\n");
+}
+
+void GENIX_Write(unsigned addr, unsigned data)
+{
+	switch (addr & 0x3) {
+	case 0:
+		gx_log_format(data, main68k_context.areg[0],
+		              main68k_context.areg[1]);
+		break;
+	case 1:
+		gx_log_hexdump(data, main68k_context.areg[0],
+		               main68k_context.areg[1]);
+		break;
+	case 2:
+		gx_log_status(data);
+		break;
+	case 3:
+		gx_log_config(data, main68k_context.areg[0]);
+		break;
+	}
+}
diff -rupN -xMakefile -xMakefile.in gens-2.15.5/src/gens/gens_core/genix/genix.h gens-2.15.5-gx-log/src/gens/gens_core/genix/genix.h
--- gens-2.15.5/src/gens/gens_core/genix/genix.h	1969-12-31 17:00:00.000000000 -0700
+++ gens-2.15.5-gx-log/src/gens/gens_core/genix/genix.h	2013-10-17 01:43:55.394370896 -0700
@@ -0,0 +1,9 @@
+/* Copyright (C) 2013 Alex Iadicicco */
+/* Misc debugging utilities */
+
+#ifndef __INC_GENS_GENIX_H__
+#define __INC_GENS_GENIX_H__
+
+void GENIX_Write(unsigned addr, unsigned data);
+
+#endif
diff -rupN -xMakefile -xMakefile.in gens-2.15.5/src/gens/gens_core/mem/mem_z80.asm gens-2.15.5-gx-log/src/gens/gens_core/mem/mem_z80.asm
--- gens-2.15.5/src/gens/gens_core/mem/mem_z80.asm	2005-03-08 14:02:39.000000000 -0700
+++ gens-2.15.5-gx-log/src/gens/gens_core/mem/mem_z80.asm	2013-10-17 01:36:54.989082130 -0700
@@ -26,6 +26,8 @@ section .text align=64
 	extern _Read_To_68K_Space
 	extern _Write_To_68K_Space
 
+	extern GENIX_Write
+
 
 	;unsigned char Z80_ReadB(unsigned int Adr);
 	DECL Z80_ReadB
@@ -51,7 +53,7 @@ section .text align=64
 			dd Z80_ReadB_Ram,		; 0x2000 - 0x2FFF
 			dd Z80_ReadB_Ram,		; 0x3000 - 0x3FFF
 			dd Z80_ReadB_YM2612,	; 0x4000 - 0x4FFF
-			dd Z80_ReadB_YM2612,	; 0x5000 - 0x5FFF
+			dd Z80_ReadB_GENIX,	; 0x5000 - 0x5FFF
 			dd Z80_ReadB_Bank,		; 0x6000 - 0x6FFF
 			dd Z80_ReadB_PSG,		; 0x7000 - 0x7FFF
 			dd Z80_ReadB_68K_Ram,	; 0x8000 - 0x8FFF
@@ -90,7 +92,7 @@ section .text align=64
 			dd Z80_ReadW_Ram,		; 0x2000 - 0x2FFF
 			dd Z80_ReadW_Ram,		; 0x3000 - 0x3FFF
 			dd Z80_ReadW_YM2612,	; 0x4000 - 0x4FFF
-			dd Z80_ReadW_YM2612,	; 0x5000 - 0x5FFF
+			dd Z80_ReadW_GENIX,	; 0x5000 - 0x5FFF
 			dd Z80_ReadW_Bank,		; 0x6000 - 0x6FFF
 			dd Z80_ReadW_PSG,		; 0x7000 - 0x7FFF
 			dd Z80_ReadW_68K_Ram,	; 0x8000 - 0x8FFF
@@ -131,7 +133,7 @@ section .text align=64
 			dd Z80_WriteB_Ram,		; 0x2000 - 0x2FFF
 			dd Z80_WriteB_Ram,		; 0x3000 - 0x3FFF
 			dd Z80_WriteB_YM2612,	; 0x4000 - 0x4FFF
-			dd Z80_WriteB_YM2612,	; 0x5000 - 0x5FFF
+			dd Z80_WriteB_GENIX,	; 0x5000 - 0x5FFF
 			dd Z80_WriteB_Bank,		; 0x6000 - 0x6FFF
 			dd Z80_WriteB_PSG,		; 0x7000 - 0x7FFF
 			dd Z80_WriteB_68K_Ram,	; 0x8000 - 0x8FFF
@@ -171,7 +173,7 @@ section .text align=64
 			dd Z80_WriteW_Ram,		; 0x2000 - 0x2FFF
 			dd Z80_WriteW_Ram,		; 0x3000 - 0x3FFF
 			dd Z80_WriteW_YM2612,	; 0x4000 - 0x4FFF
-			dd Z80_WriteW_YM2612,	; 0x5000 - 0x5FFF
+			dd Z80_WriteW_GENIX,	; 0x5000 - 0x5FFF
 			dd Z80_WriteW_Bank,		; 0x6000 - 0x6FFF
 			dd Z80_WriteW_PSG,		; 0x7000 - 0x7FFF
 			dd Z80_WriteW_68K_Ram,	; 0x8000 - 0x8FFF
@@ -216,6 +218,11 @@ section .text align=64
 		
 	ALIGN4
 
+	DECLF Z80_ReadB_GENIX, 4
+		; GENIX has no read right now
+		xor al, al
+		ret
+
 	DECLF Z80_ReadB_PSG, 4
 		cmp ecx, 0x7F04
 		jb short .bad
@@ -302,6 +309,13 @@ section .text align=64
 		
 	ALIGN4
 
+	DECLF Z80_ReadW_GENIX, 4
+		; GENIX has no read right now
+		xor ax, ax
+		ret
+
+	ALIGN4
+
 	DECLF Z80_ReadW_PSG, 4
 		cmp ecx, 0x7F04
 		jb short .bad
@@ -397,6 +411,16 @@ section .text align=64
 		
 	ALIGN4
 
+	DECLF Z80_WriteB_GENIX, 8
+		and ecx, 0xff
+		push edx
+		push ecx
+		call GENIX_Write
+		add esp, 8
+		ret
+
+	ALIGN4
+
 	DECLF Z80_WriteB_PSG, 8
 		cmp ecx, 0x7F11
 		jne short .other
@@ -460,6 +484,15 @@ section .text align=64
 		ret
 		
 	ALIGN4
+
+	DECLF Z80_WriteW_GENIX, 8
+		push edx
+		push ecx
+		call GENIX_Write
+		add esp, 8
+		ret
+
+	ALIGN4
 	
 	DECLF Z80_WriteW_PSG, 8
 		cmp ecx, 0x7F11
@@ -499,4 +532,4 @@ section .text align=64
 		push ecx
 		call M68K_WB
 		add esp, 16
-		ret
\ No newline at end of file
+		ret
diff -rupN -xMakefile -xMakefile.in gens-2.15.5/src/gens/Makefile.am gens-2.15.5-gx-log/src/gens/Makefile.am
--- gens-2.15.5/src/gens/Makefile.am	2005-03-08 14:02:54.000000000 -0700
+++ gens-2.15.5-gx-log/src/gens/Makefile.am	2013-10-17 01:40:17.028167644 -0700
@@ -91,6 +91,8 @@ gens_SOURCES = \
 		gens_core/vdp/vdp_rend.asm \
 		gens_core/vdp/vdp_rend.h \
 		gens_core/vdp/vdp_32x.asm \
+		gens_core/genix/genix.h \
+		gens_core/genix/genix.c \
 		segacd/cd_aspi.c \
 		segacd/cd_aspi.h \
 		segacd/cd_file.c \
